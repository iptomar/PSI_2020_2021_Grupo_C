@model LuizaAndaluz.Models.Historia

@{
    ViewData["Title"] = "Edit";
}




<h1>Edit</h1>

<h4>Historia</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <div>
            <label class="control-label">Mapa</label>
            <div id="mapSecundario"></div>
            <h4 id="aviso"></h4>
        </div>
        <script>
            var map = L.map('mapSecundario', { minZoom: 4 }).setView([39.6019900, -8.4092400], 4);

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors', maxZoom: 18
            }).addTo(map);

            var greenIcon = L.icon({
                iconUrl: 'assets/img/yellowIcon.png',

                iconSize: [20, 50], // size of the icon
                iconAnchor: [11.6, 49.5], // point of the icon which will correspond to marker's location
                popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor
            });

            var redIcon = L.icon({
                iconUrl: 'assets/img/BlackIcon.png',

                iconSize: [20, 50], // size of the icon
                iconAnchor: [11.6, 49.5], // point of the icon which will correspond to marker's location
                popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor
            });

            var marker = L.marker([parseFloat(@ViewBag.Latitude), parseFloat(@ViewBag.Longitude)], { icon: redIcon }).addTo(map);

            map.on("click", (event) => {
                if (marker != null) {
                    map.removeLayer(marker);
                    marker = null;
                }
                marker = L.marker([event.latlng.lat, event.latlng.lng], { icon: redIcon }).addTo(map);
                document.getElementById('lat').value = event.latlng.lat;
                document.getElementById('lng').value = event.latlng.lng;
                document.getElementById('aviso').innerHTML = "Localização Marcada";
            });

            var locais = @Html.Raw(Json.Serialize(@ViewBag.locais));
            for (var i = 0; i < locais.length; i++) {
                local = [parseFloat(locais[i].latitude), parseFloat(locais[i].longitude)];
                const marker1 = L.marker(local, { icon: greenIcon }).addTo(map);
                marker1.on("click", () => {
                    if (marker != null) {
                        map.removeLayer(marker);
                        marker = null;
                    }
                    document.getElementById('lat').value = parseFloat(local[0]);
                    document.getElementById('lng').value = parseFloat(local[1]);
                    document.getElementById('aviso').innerHTML = "Localização Marcada";
                });
            }
        </script>
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ID" />
            <div class="form-group">
                <label asp-for="Titulo" class="control-label"></label>
                <input asp-for="Titulo" class="form-control" />
                <span asp-validation-for="Titulo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Descricao" class="control-label"></label>
                <textarea asp-for="Descricao" rows="4" cols="50" class="form-control"></textarea>
                <span asp-validation-for="Descricao" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Estado" /> @Html.DisplayNameFor(model => model.Estado)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataNascimento" class="control-label"></label>
                <input type = "date" asp-for="DataNascimento" class="form-control" />
                <span asp-validation-for="DataNascimento" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-validation-for="lat" type="hidden" id="lat" name="lat" value="@ViewBag.Latitude" />
                <input asp-validation-for="lng" type="hidden" id="lng" name="lng" value="@ViewBag.Longitude" />
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
